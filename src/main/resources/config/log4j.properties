#1.配置根Logger
#log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
#level :设定日志记录的最低级别，可设的值有OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别，
#       通过在这里设定级别，您可以控制应用程序中相应级别的日志信息的开关，比如在这里设定了INFO级别，则应用程序中所有DEBUG级别的日志信息将不会被打印出来。
#appenderName：就是指定日志信息要输出到哪里。可以同时指定多个输出目的地，用逗号隔开。
log4j.rootLogger=INFO,stdout,file
#配置日志信息输出目的地（appender）
#log4j.appender.appenderName=classname
#className：可设值如下：
#(1)org.apache.log4j.ConsoleAppender（控制台）
#(2)org.apache.log4j.FileAppender（文件）
#(3)org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#(4)org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#(5)org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）a
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n

log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#.File:指定log文件路径
log4j.appender.file.File=/usr/local/project/log/blog/root.log
#.Append:true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true
log4j.appender.file.Append=true
#.Threshold:指定日志信息的最低输出级别，默认为DEBUG
log4j.appender.file.Threshold=INFO
#.DatePattern:指定滚动日志文件的时间
#1)'.'yyyy-MM：每月
#2)'.'yyyy-ww：每周
#3)'.'yyyy-MM-dd：每天
#4)'.'yyyy-MM-dd-a：每天两次
#5)'.'yyyy-MM-dd-HH：每小时
#6)'.'yyyy-MM-dd-HH-mm：每分钟
log4j.appender.file.DatePattern='.'yyyy-MM-dd
#配置日志信息的输出格式（Layout）可设值如下：
#(1)org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#(2)org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#(3)org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#(4)org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#设定以怎样的格式显示消息
log4j.appender.file.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%-5p] %m%n
#2.配置自定义log(com.mlxp包下的log会按mlxp配置)
log4j.logger.com.mlxp=DEBUG,mlxp
#自定义的日志默认是同时输出到log4j.rootLogger所配置的日志中的，additivity设为false可以只让它们输出到自己指定的日志中
log4j.additivity.com.mlxp=false
log4j.appender.mlxp=org.apache.log4j.DailyRollingFileAppender
log4j.appender.mlxp.File=/usr/local/project/log/blog/mlxp.log
log4j.appender.mlxp.Append=true
log4j.appender.mlxp.DatePattern='.'yyyy-MM-dd
log4j.appender.mlxp.layout=org.apache.log4j.PatternLayout
log4j.appender.mlxp.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%p] %m%n

#3.配置mybatis
log4j.logger.com.mlxp.dao=DEBUG,mybatis
#自定义的日志默认是同时输出到log4j.rootLogger所配置的日志中的，additivity设为false可以只让它们输出到自己指定的日志中
log4j.additivity.com.mlxp.dao=false
log4j.appender.mybatis=org.apache.log4j.DailyRollingFileAppender
log4j.appender.mybatis.File=/usr/local/project/log/blog/sql.log
log4j.appender.mybatis.Append=true
log4j.appender.mybatis.DatePattern='.'yyyy-MM-dd
log4j.appender.mybatis.layout=org.apache.log4j.PatternLayout
log4j.appender.mybatis.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%p] %m%n